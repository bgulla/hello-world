---
## ARM64 Docker Build
kind: pipeline
type: docker
name: arm64-build

platform:
  os: linux
  arch: arm64

steps:

- name: build-publish  
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: bgulla/hello-world
    auto_tag: true
    auto_tag_suffix: drone-build-arm64

---
## AMD64 Docker Build
kind: pipeline
type: docker
name: amd64-build

platform:
  os: linux
  arch: amd64

steps:

- name: build-publish   
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: bgulla/hello-world
    auto_tag: true
    auto_tag_suffix: drone-build-amd64

---
## Docker Manifest Step- combines both architectures into a multi-tagged image. The docker client will pull the appropriate image based on the client's architecture.
kind: pipeline
name: default

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username: 
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: bgulla/hello-world:latest
    template: bgulla/hello-world:drone-build-ARCH
    platforms:
      - linux/amd64
      - linux/arm
depends_on:
- amd64-build
- arm64-build


# kind: pipeline
# name: default
# steps:
#   # - name: test
#   #   image: golang:1.10-alpine
#   #   commands:
#   #   - "go test"
#   # - name: build
#   #   image: golang:1.10-alpine
#   #   commands:
#   #     - "go build -o ./myapp"
#   - name: publish
#     image: plugins/docker
#     settings:
#       repo: rancherfederal/hello-world
#       tags: [ "${DRONE_COMMIT_SHA:0:7}","latest" ]
#       username:
#         from_secret: docker_username
#       password:
#         from_secret: docker_password
#   - name: slack
#     image: plugins/slack
#     settings:
#       webhook: 
#         from_secret: slack_webhook
#       channel: cicd
#     when:
#       status: [ success, failure ]
